summary(fm, vcov = sandwich, df = Inf, diagnostics = TRUE)
getwd()
load("ADNI.RData",verbose=TRUE)
ADNI <- data.frame(G)
ADNI$G<-G
ADNI$X<-X
ADNI$Z<-Z
ADNI$Y<-Y
save(ADNI,file="ADNI.rda")
library(CIVMR)
data(ANI)
data(AdNI)
data(ADNI)
dim(ADNI$G)
fm <- ivreg(Y ~ X | G, data = ADNI)
summary(fm, vcov = sandwich, df = Inf, diagnostics = TRUE)
data(ADNI)
list_mat <- NULL
list_mat <- rbind(list_mat, lmPvalue(ADNI$X,ADNI$G) )
list_mat <- rbind(list_mat, lmPvalue(ADNI$Z[,1],ADNI$G) )
list_mat <- rbind(list_mat, lmPvalue(ADNI$Z[,2],ADNI$G) )
list_mat <- rbind(list_mat, lmPvalue(ADNI$Z[,3],ADNI$G) )
list_mat <- log(list_mat)
plot(list_mat[1,],col="black", ylab ="log-Pvalue",  pch =20,ylim=c(0,min(list_mat)),
xlab="15 SNPs associated with Ptau in previous studies")
text(6, -60, "Amyloid beta" ,col="red" )
text(6, -50, "T-Tau" ,col="blue" )
text(6, -40, "P-Tau" ,col="black" )
text(6, -30, "FDG: SUVR_global" ,col="green" )
points(list_mat[2,], col="red", pch =20 )
points(list_mat[3,], col="blue", pch =20)
points(list_mat[4,], col="green", pch =20)
abline(h=log(0.05))
abline(h=log(5*10^(-8)))
library(CIVMR)
data(ADNI)
library(CIVMR)
lmPvalue()
list_mat <- NULL
list_mat <- rbind(list_mat, lmPvalue(ADNI$X,ADNI$G) )
list_mat <- rbind(list_mat, lmPvalue(ADNI$Z[,1],ADNI$G) )
list_mat <- rbind(list_mat, lmPvalue(ADNI$Z[,2],ADNI$G) )
list_mat <- rbind(list_mat, lmPvalue(ADNI$Z[,3],ADNI$G) )
list_mat <- log(list_mat)
lmPvalue
library(CIVMR)
library(CIVMR)
dim(ADNI$G)
dim(ADNI$Z)
help(package=CIVMR)
devtools::use_data(ADNI)
devtools::use_data(ADNI,overwrite=TRUE)
library(CIVMR)
rm(list=ls())
ADNI
data(ADNI)
dim(ADNI$G)
data(list=ADNI)
getwed()
getwd()
devtools::use_data(ADNI)
data("ADNI")
ADNI
library(CIVMR)
data(simulation)
data(ADNI)
ADNI$Y
ADNI$X
getwd()
load("ADNI.RData",verbose=TRUE)
ADNI <- data.frame(G)
ADNI$G <- G
ADNI$X <- X
ADNI$X <- Z
ADNI$Z <- Z
ADNI$Y <- Y
ADNI$X <- X
save(ADNI,file="ADNI.RData")
load("ADNI.rda",verbose=TRUE)
library(CIVMR)
library(ADNI)
data(ADNI)
dim(ADNI$G)
dim(ADNI$X)
dim(ADNI$Z)
dim(ADNI$Y)
min(ADNI$Y)
min(ADNI$X)
help(package=CIVMR)
library(AER)
library(CIVMR)
data(ADNI)
civ.smooth <- smooth_CIV(ADNI$G,ADNI$X,ADNI$Z,ADNI$Y)
library(MASS)
rm(list=ls())
library(MASS)
library(caret)
Null
setwd("C:/Users/lai.jiang/Documents/GitHub/CIVMR")
document()
roxygenise()
library(roxygen2)
library(devtools)
setwd("C:/Users/lai.jiang/Documents/GitHub/CIVMR")
document()
roxygenise()
setwd("C:/Users/lai.jiang/Documents/GitHub")
install("CIVMR")
library(CIVMR)
civ.smooth <- smooth_CIV(ADNI$G,ADNI$X,ADNI$Z,ADNI$Y)
dim(civ.smooth$u_mat)
plot(civ.smooth$u_mat[,1])
plot(civ.smooth$u_mat[,2])
plot(civ.smooth$u_mat[,3])
plot(civ.smooth$u_mat[,4])
plot(civ.smooth$u_mat[,c(2,3)])
plot(civ.smooth$u_mat[,c(1,4)])
cor(civ.smooth$u_mat[,c(1,4)])
civ.smooth$opt_lambda
help(package=CIVMR)
help(package=CIVMR)
#this code can load the imported Rpackages
setwd("C:/Users/lai.jiang/Documents/GitHub/CIVMR")
document()
roxygenise()
setwd("C:/Users/lai.jiang/Documents/GitHub")
install("CIVMR")
library(CIVMR)
help(package=CIVMR)
library(CIVMR)
warnings()
help(package=CIVMR)
civ.smooth <- smooth_CIV(ADNI$G,ADNI$X,ADNI$Z,ADNI$Y)
civ.iv <- IV_reduction(civ.smooth$IV_mat, crit_high_cor = 0.9)
length(civ.iv$id_snp)
plot(civ.iv$sel_snp[,1])
plot(civ.iv$sel_snp[,2])
plot(civ.iv$sel_snp[,3])
dim(civ.iv$sel_snp)
TSLS_IV(data.frame(G=civ.iv$sel_snp, X = ADNI$X, Y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
class(civ.iv$sel_snp)
dim(civ.iv$sel_snp)
dim(ADNI$X)
TSLS_IV(list(G=civ.iv$sel_snp, X = ADNI$X, Y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
TSLS_IV(list(G=civ.iv$sel_snp, X = ADNI$X, Y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
TSLS_IV(list(G=civ.iv$sel_snp, X = ADNI$X, Y=y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
TSLS_IV(list(G=civ.iv$sel_snp, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
TSLS_IV(list(G=civ.iv$sel_snp, X = matrix(ADNI$X,ncol=1), Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
TSLS_IV(list(G=civ.iv$sel_snp, X = matrix(ADNI$X,ncol=1), Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
TSLS_IV(list(G=ADNI$G, X = matrix(ADNI$X,ncol=1), Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
TSLS_IV(list(G=-civ.iv$sel_snp, X = matrix(ADNI$X,ncol=1), Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
allele.iv <- allele(ADNI,n_folds=10)
dim(ADNI$X)
ncol(ADNI$X)
length(ncol(ADNI$X))
library(CIVMR)
allele.iv <- allele(ADNI,n_folds=10)
allele.iv$beta_est
dim(allele.iv$weights)
dim(ADNI$G)
TSLS_IV(list(G=civ.smooth$IV_mat, X = matrix(ADNI$X,ncol=1), Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, #var_cal=FALSE)
)
TSLS_IV(list(G=civ.smooth$IV_mat, X = matrix(ADNI$X,ncol=1), Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
TSLS_IV(list(G=civ.iv$sel_snp, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
TSLS_IV(list(G=civ.smooth$IV_mat, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
civ.smooth <- smooth_CIV(ADNI$G,ADNI$X,ADNI$Z,ADNI$Y)
civ.smooth$opt_lambda
TSLS_IV(list(G=civ.smooth$IV_mat, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
civ.iv <- IV_reduction(civ.smooth$IV_mat, crit_high_cor = 0.9)
TSLS_IV(list(G=civ.iv$sel_snp, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
civ.iv$id_snp
civ.iv <- IV_reduction(civ.smooth$IV_mat, crit_high_cor = 0.8)
TSLS_IV(list(G=civ.iv$sel_snp, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
civ.iv$id_snp
allele.iv <- allele(ADNI,n_folds=10)
allele.iv$beta_est
getwd()
setwd("~/CIVMR/data")
setwd("*/CIVMR/data")
setwd("C:/Users/lai.jiang/Documents/GitHub/CIVMR/data")
load("amy_MR.RData",verbose=TRUE)
civ.smooth <- smooth_CIV(G,X,Z,Y)
civ.iv <- IV_reduction(civ.smooth$IV_mat, crit_high_cor = 0.9)
civ.iv$id_snp
TSLS_IV(list(G=civ.iv$sel_snp, X = X, Y=Y), Fstats=FALSE, var_cal=FALSE)
ADNI <- data.frame(Y)
ADNI$Y <- Y
ADNI$G <- G
ADNI$X <- X
ADNI$Z <- Z
dim(ADNI$Z)
dim(ADNI$X)
dim(ADNI$G)
save(ADNI,file="ADNI.RData")
save(ADNI,file="ADNI.rda")
devtools::use_data(ADNI)
devtools::use_data(ADNI,overwrite=TRUE)
library(CIVMR)
data(ADNI)
civ.smooth <- smooth_CIV(ADNI$G,ADNI$X,ADNI$Z,ADNI$Y)
library(roxygen2)
library(devtools)
data(ADNI)
library(CIVMR)
warnings()
civ.smooth <- smooth_CIV(ADNI$G,ADNI$X,ADNI$Z,ADNI$Y)
civ.iv <- IV_reduction(civ.smooth$IV_mat, crit_high_cor = 0.9)
civ.iv$id_snp
plot(civ.iv$sel_snp[,1])
plot(civ.iv$sel_snp[,2])
plot(civ.iv$sel_snp[,c(1,2)])
TSLS_IV(list(G=civ.smooth$IV_mat, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
TSLS_IV(list(G=civ.iv$sel_snp, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=FALSE, var_cal=FALSE)
TSLS_IV(list(G=civ.iv$sel_snp, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
allele.iv <- allele(ADNI,n_folds=10)
allele.iv$beta_est
G <- lm(G~Z,data=ADNI)$residuals
dim(G)
g1<-lm(G[,1]~Z,data=ADNI)$residuals
plot(G[,1],g1)
abline(a=0,b=1)
sum(G[,1]-g1)
allele.adj <- allele(list(G=G,X=X,Y=Y),n_folds=10)
G <- lm(G~Z,data=ADNI)$residuals
X <- lm(X~Z,data=ADNI)$residuals
Y <- lm(Y~Z,data=ADNI)$residuals
allele.adj <- allele(list(G=G,X=X,Y=Y),n_folds=10)
allele.adj$beta_est
TSLS_IV(ADNI, Fstats=TRUE, var_cal=TRUE)
library(CIVMR)
library(CIVMR)
data(ADNI)
G <- lm(G~Z,data=ADNI)$residuals
X <- lm(X~Z,data=ADNI)$residuals
Y <- lm(Y~Z,data=ADNI)$residuals
allele.adj <- allele(list(G=G,X=X,Y=Y),n_folds=10)
TSLS_IV(ADNI, Fstats=TRUE, var_cal=TRUE)
TSLS_IV
library(CIVMR)
data(ADNI)
G <- lm(G~Z,data=ADNI)$residuals
X <- lm(X~Z,data=ADNI)$residuals
Y <- lm(Y~Z,data=ADNI)$residuals
allele.adj <- allele(list(G=G,X=X,Y=Y),n_folds=10)
TSLS_IV(ADNI, Fstats=TRUE, var_cal=TRUE)
plot(civ.iv$id_snp)
civ.smooth$u_mat[,1]
plot(civ.smooth$u_mat[,1])
plot(civ.smooth$u_mat[,2])
plot(civ.smooth$u_mat[,1])
plot(civ.smooth$u_mat[,2])
#allele score method while adjusting for pleiotropic phenotypes Z
G <- lm(G~Z,data=ADNI)$residuals
X <- lm(X~Z,data=ADNI)$residuals
Y <- lm(Y~Z,data=ADNI)$residuals
ADNI.adj <- list(G=G,X=X,Y=Y)
allele.adj <- allele(ADNI.adj,n_folds=10)
#2SLS method (naive)
TSLS_IV(ADNI, Fstats=TRUE, var_cal=TRUE)
#2SLS method (adjusted)
TSLS_IV(ADNI.adj, Fstats=TRUE, var_cal=TRUE)
##
ADNI.mul <- list(G=ADNI$G, X=cbind(ADNI$X,ADNI$Z),Y=ADNI$Y)
TSLS_IV(ADNI.mul, Fstats=TRUE, var_cal=TRUE)
help(package=CIVMR)
civ <- CIV(ADNI)
civ <- CIV(ADNI)
civ.est <- TSLS_IV(list(G=civ$CIV, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
dim(civ$CIV)
plot(civ$CIV)
civ$CIV
civ <- CIV(ADNI)
plot(civ$c)
civ$c
MR.data <- ADNI
civ.deco <- LA_decomposition(MR.data$G,MR.data$X,MR.data$Z)
dim(civ.deco$A)
civ.deco$A
civ.deco$B
solution <- solve_pcc(civ.deco$A, civ.deco$B)
solution$c
A <- civ.deco$A
B <- civ.deco$B
p <- nrow(B)
k <- ncol(B)
qrd <- qr(B)
Q <- qr.Q(qrd,complete= TRUE)
R <- qr.R(qrd,complete= TRUE)
p
l
k
QTAQ <- crossprod(Q,crossprod(A, Q))
A22 <- QTAQ[(k+1):(p),(k+1):(p)]
eg <- eigen(A22)
eg
k
p
eg$values
civ <- CV_CIV(ADNI)
civ <- cv_CIV(ADNI)
library(CIVMR)
library(CIVMR)
data(ADNI)
civ.cv <- cv_CIV(ADNI)
civ.boot <- boot_CIV(ADNI)
civ.boot$boots.cor.u
civ.boot$boots.u
plot(civ.boot$boots.u)
max(ADNI$X)
max(ADNI$Z)
max(ADNI$Y)
max(ADNI$G)
plot(ADNI$g[,1])
plot(ADNI$g[,1])
plot(ADNI$G[,1])
plot(ADNI$G[,2])
plot(ADNI$G[,3])
plot(ADNI$G[,4])
cor(ADNI$G)
f<-IV_reduction(ADNI$G)
f$id_snp
CIV(list(G=f$sel_snp,X=ADNI$X,Y=ADNI$Y))
CIV(list(G=f$sel_snp,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y))
CIV(list(G=f$sel_snp,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y))->g
plot(g$c)
sel.G <- IV_reduction(ADNI$G, crit_high_cor = 0.9)$sel_snp
civ.est <- CIV(list(G=f$sel_snp,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y) )
civ.est$c
civ.est$civ.est <- TSLS_IV(list(G=civ.G, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
civ.est <- TSLS_IV(list(G=civ.G, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
sel.G <- IV_reduction(ADNI$G, crit_high_cor = 0.9)$sel_snp
#then calculate the CIV instrument
civ.G <- CIV(list(G=f$sel_snp,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y) )$CIV
#then run the TSLS estimation method
civ.est <- TSLS_IV(list(G=civ.G, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
CIV.EST
civ.est
sel.G <- IV_reduction(ADNI$G, crit_high_cor = 0.9)$sel_snp
#then calculate the CIV instrument
civ.G <- CIV(list(G=sel.G,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y) )$CIV
#then run the TSLS estimation method
civ.est <- TSLS_IV(list(G=civ.G, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
civ.est
civ.boot <- boot_CIV(list(G=sel.G,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y) )
plot(civ.boot$boots.cor.u)
plot(civ.boot$boots.u)
civ.boot.est <- TSLS_IV(list(G=civ.boot.G, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
civ.boot.G <- boot_CIV(list(G=sel.G,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y) )$boots.cor.u
#civ.boot estimation.
civ.boot.est <- TSLS_IV(list(G=civ.boot.G, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
civ.boot.G <- boot_CIV(list(G=sel.G,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y) )$boots.cor.u
plot(civ.boot.G)
civ.boot.G <- se.G %*% (boot_CIV(list(G=sel.G,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y) )$boots.cor.u)
civ.boot.G <- sel.G %*% (boot_CIV(list(G=sel.G,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y) )$boots.cor.u)
civ.boot.est <- TSLS_IV(list(G= civ.boot.G, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
civ.boot.est$coef
civ.boot.est
civ.cv.G <- cv_CIV(list(G=sel.G,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y))
civ.cv.G$beta_est
civ.cv.G$beta_est
dim(ADNI$G)
library(AER)
fm <- ivreg(Y ~ X | G, data = ADNI)
summary(fm, vcov = sandwich, df = Inf, diagnostics = TRUE)
G <- lm(G~Z,data=ADNI)$residuals
X <- lm(X~Z,data=ADNI)$residuals
Y <- lm(Y~Z,data=ADNI)$residuals
ADNI.adj <- list(G=G,X=X,Y=Y)
ADNI.mul <- list(G=ADNI$G, X=cbind(ADNI$X,ADNI$Z),Y=ADNI$Y)
#2SLS method (naive)
TSLS_IV(ADNI, Fstats=TRUE, var_cal=TRUE)
#2SLS method (adjusted)
TSLS_IV(ADNI.adj, Fstats=TRUE, var_cal=TRUE)
#2SLS method (multiple regression)
ADNI.mul <- list(G=ADNI$G, X=cbind(ADNI$X,ADNI$Z),Y=ADNI$Y)
TSLS_IV(ADNI.mul, Fstats=TRUE, var_cal=TRUE)
675/775-1
sel.G <- IV_reduction(ADNI$G, crit_high_cor = 0.99)$sel_snp
dim(sel.G)
sel.G <- IV_reduction(ADNI$G, crit_high_cor = 0.9)$sel_snp
dim(sel.G)
civ.G <- CIV(list(G=sel.G,X=ADNI$X,Z=ADNI$Z,Y=ADNI$Y) )$CIV
civ.est <- TSLS_IV(list(G=civ.G, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
civ.est
civ.iv <- IV_reduction(civ.smooth$IV_mat, crit_high_cor = 0.9)
civ.iv$id_snp
plot(civ.smooth$u_mat[,civ.iv$id_snp[1]])
plot(civ.smooth$u_mat[,civ.iv$id_snp[2]])
G <- lm(G~Z,data=ADNI)$residuals
X <- lm(X~Z,data=ADNI)$residuals
Y <- lm(Y~Z,data=ADNI)$residuals
ADNI.adj <- list(G=G,X=X,Y=Y)
ADNI.mul <- list(G=ADNI$G, X=cbind(ADNI$X,ADNI$Z),Y=ADNI$Y)
#2SLS method (naive)
tsls.naive <- TSLS_IV(ADNI, Fstats=TRUE, var_cal=TRUE)
#2SLS method (adjusted)
tsls.adj <- TSLS_IV(ADNI.adj, Fstats=TRUE, var_cal=TRUE)
#2SLS method (multiple regression)
ADNI.mul <- list(G=ADNI$G, X=cbind(ADNI$X,ADNI$Z),Y=ADNI$Y)
tsls.mul <- TSLS_IV(ADNI.mul, Fstats=TRUE, var_cal=TRUE)
allele
allele.est <- allele(ADNI)
allele.est$beta_est
civ.est$coef
civ.boot.est
civ.cv.G$beta_est
civ.smooth.est <- TSLS_IV(list(G=civ.iv$sel_snp, X = ADNI$X, Y=ADNI$Y, y=ADNI$Y), Fstats=TRUE, var_cal=TRUE)
civ.smooth.est$coef
ce.table <- c(tsls.naive$coef[-1], tsls.adj$coef[-1], tsls.mul$coef[-1],
allele.est$beta_est, allele.adj$beta_est,
civ.est$coef[-1], civ.boot.est$coef[-1], civ.cv.G$beta_est,
civ.smooth.est$coef[-1]
)
ce.table
colnames(ce.table)
colnames(ce.table)<-c(1:12)
head(ce.table)<-c(1:12)
head(ce.table) <- c(1:12)
head(ce.table)
ce.table
class(ce.table)
structure(ce.table, names=letters[1:12], foo="bar", class="myclass")
kable(ce.table)
knitr::kable(ce.table)
knitr::kable(head(ce.table, 12))
tsls.naive
tsls.naive$var
tsls.naive$var
ce.table <- c(tsls.naive$coef[-1], tsls.adj$coef[-1], tsls.mul$coef[-1],
allele.est$beta_est, allele.adj$beta_est,
civ.est$coef[-1], civ.boot.est$coef[-1], civ.cv.G$beta_est,
civ.smooth.est$coef[-1]
)
var.table <- c(tsls.naive$var, tsls.adj$var, tsls.mul$var,
NA,NA,
civ.est$var, civ.boot.est$var, NA,
civ.smooth.est$var)
result.table <- rbind(ce.table, var.table)
knitr::kable(head(result.table, 12))
colnames(result.table) <- c(1:12)
knitr::kable(head(result.table, 12))
colnames(result.table)
dim(result.table)
ce.table <- c(tsls.naive$coef[-1], tsls.adj$coef[-1], tsls.mul$coef[-1],
allele.est$beta_est, allele.adj$beta_est,
civ.est$coef[-1], civ.boot.est$coef[-1], civ.cv.G$beta_est,
civ.smooth.est$coef[-1]
)
var.table <- c(tsls.naive$var, tsls.adj$var, tsls.mul$var,
NA,NA,
civ.est$var, civ.boot.est$var, NA,
civ.smooth.est$var)
result.table <- rbind(ce.table, var.table)
dim(result.table)
ce.table
var.table
tsls.naive$var
tsls.adj$var
tsls.mul$var
ce.table <- c(tsls.naive$coef[-1], tsls.adj$coef[-1], tsls.mul$coef[-1],
allele.est$beta_est, allele.adj$beta_est,
civ.est$coef[-1], civ.boot.est$coef[-1], civ.cv.G$beta_est,
civ.smooth.est$coef[-1]
)
var.table <- c(tsls.naive$var[1], tsls.adj$var[1], tsls.mul$var[1],
NA,NA,
civ.est$var[1], civ.boot.est$var[1], NA,
civ.smooth.est$var[1])
var.table
result.table <- rbind(ce.table, var.table)
length(var.table)
ce.table
tsls.mul$coef
ce.table <- c(tsls.naive$coef[-1], tsls.adj$coef[-1], tsls.mul$coef[2],
allele.est$beta_est, allele.adj$beta_est,
civ.est$coef[-1], civ.boot.est$coef[-1], civ.cv.G$beta_est,
civ.smooth.est$coef[-1]
)
var.table <- c(tsls.naive$var[1], tsls.adj$var[1], tsls.mul$var[1],
NA,NA,
civ.est$var[1], civ.boot.est$var[1], NA,
civ.smooth.est$var[1])
result.table <- rbind(ce.table, var.table)
dim(result.table)
colnames(result.table) <- c(1:9)
knitr::kable(head(result.table, 9))
colnames(result.table) <- c("2SLS.naive","2SLS.adj","2SLS.mul",
"Allele.naive","Allele.adj",
"CIV","CIV_boot","CIV_cv",
"CIV_smooth")
rownames(result.table) <- c("causal effect estimation","variance estimation")
knitr::kable(head(result.table, 9))
result.table <- round( rbind(ce.table, var.table), 3)
colnames(result.table) <- c("2SLS.naive","2SLS.adj","2SLS.mul",
"Allele.naive","Allele.adj",
"CIV","CIV_boot","CIV_cv",
"CIV_smooth")
rownames(result.table) <- c("causal effect estimation","variance estimation")
knitr::kable(head(result.table, 9))
library(CIVMR)
sqrt(var.table)
result.table <- rbind(ce.table, sqrt(var.table))
colnames(result.table) <- c("2SLS.naive","2SLS.adj","2SLS.mul",
"Allele.naive","Allele.adj",
"CIV","CIV_boot","CIV_cv",
"CIV_smooth")
rownames(result.table) <- c("causal effect estimation","s.d estimation")
knitr::kable(head(result.table, 9))
knitr::kable(head(round(result.table,4), 9))
civ.iv$id_snp
civ.iv$id_snp
civ.iv$id_snp
